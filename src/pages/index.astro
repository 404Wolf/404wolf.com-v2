---
import { getCollection } from "astro:content";
import ExtendedAbout from "../content/ExtendedAbout.mdx";
import BasicAbout from "../content/BasicAbout.mdx";
import BaseLayout from "../layouts/BaseLayout.astro";
import { Tile } from "../components/Tile.tsx";
import BasicPostCard from "../components/BasicPostCard.astro";
import { SITE_URL } from "../consts";

const allPosts = await getCollection("posts");
const featuredPosts = allPosts
	.filter((post) => post.data.tags?.includes("featured"))
	.sort(
		(a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime(),
	)
	.slice(0, 6)
	.map((post) => {
		// Remove the "featured" tag since we are only showing featured posts anyway
		post.data.tags = post.data.tags.filter((tag) => tag !== "featured");
		return post;
	});
---

<BaseLayout>
  <BasicAbout slot="header-body" />

  <Fragment slot="head">
    <meta name="description" content="Wolf Mermelstein's personal website" />
    <meta name="author" content="Wolf Mermelstein" />
    
    <link rel="canonical" href={SITE_URL} />

    <meta property="og:type" content="website" />
    <meta property="og:url" content={SITE_URL}/>
    <meta property="og:title" content="Wolf Mermelstein Personal Website" />
    <meta property="og:description" content="Wolf Mermelstein's personal website" />
    <meta property="og:image" content="https://static.404wolf.com/profileMe.jpg" />
    <meta property="og:image:alt" content="Wolf Mermelstein profile photo" />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={SITE_URL} />
    <meta property="twitter:title" content="Wolf Mermelstein's Website" />
    <meta property="twitter:image" content="https://static.404wolf.com/profileMe.jpg" />
    <meta property="twitter:image:alt" content="Wolf Mermelstein profile photo" />
  </Fragment>

  <div class="flex flex-col sm:flex-row gap-7 sm:max-h-[50vh]">
    {
      featuredPosts.length > 0 && (
        <Tile
          client:load
          title="Featured Posts"
          innerClassName="overflow-y-scroll h-full"
          containerClassName="flex-1/3"
        >
          <div class="flex flex-col gap-6">
            {featuredPosts.map((post) => (
              <BasicPostCard
                path={`/posts/${post.id}/`}
                post={{
                  covers: post.data.covers,
                  title: post.data.title,
                  description: post.data.description,
                  date: post.data.date,
                  tags: post.data.tags,
                  type: post.data.type,
                }}
              />
            ))}
          </div>
        </Tile>
      )
    }

    <Tile
      client:load
      title="About"
      innerClassName="h-full overflow-y-scroll"
      containerClassName="flex-2/3"
    >
      <div class="[&_p]:mb-4">
        <ExtendedAbout />
      </div>
    </Tile>
  </div>

  <a
    id="commit-link"
    class="hidden sm:block absolute bottom-0 -left-10 rotate-[20deg] bg-linear-to-br from-slate-300/30 to-blue-300/30 hover:bg-blue-900/20 hover:drop-shadow-black px-2 py-[2px] rounded-xl opacity-50"
    href="#"
    target="_blank"
    rel="noopener noreferrer"
    style="display: none;"
  >
    <p class="text-sm text-gray-100">
      Updated @ <span id="commit-date">Loading...</span>
    </p>
  </a>
</BaseLayout>

<script>
import { GITHUB_URI } from "../consts.ts";
    
const response = await fetch(`https://api.github.com/repos/${GITHUB_URI}/commits?per_page=1`);
if (!response.ok) throw new Error('Failed to fetch commits');

const commits = await response.json();
if (commits.length > 0) {
  const latestCommit = commits[0];
  const commitDate = new Date(latestCommit.commit.author.date);
  const commitHash = latestCommit.sha;
  
  const commitLinkElement = document.getElementById('commit-link') as HTMLAnchorElement;
  const commitDateElement = document.getElementById('commit-date') as HTMLSpanElement;

  if (commitLinkElement && commitDateElement) {
    commitLinkElement.href = `https://github.com/${GITHUB_URI}/commit/${commitHash}`;
    commitLinkElement.style.display = 'block';
    commitLinkElement.style.opacity = '1';
    
    commitDateElement.textContent = commitDate.toLocaleDateString('en-US', {
      month: 'numeric',
      day: 'numeric',
      year: 'numeric',
    });
  }
}
</script>
