---
import { cva, type VariantProps } from "class-variance-authority";
import { titleCase as toTitleCase } from "title-case";
import type { BlogFrontmatterType } from "../../../content.config";
import Tag from "../../../components/Tag.astro";
import { RandomCover } from "./RandomCover";

export interface Props extends VariantProps<typeof styles.cards> {
  post: BlogFrontmatterType;
  path: string;
}

const { post, path } = Astro.props;

const tags: string[] = [...(post.tags || []), post.type, post.date];

const styles = {
  cards: cva("relative p-2 group", {
    variants: {
      size: {
        sm: "h-20",
        md: "h-32",
        lg: "h-40",
      },
    },
    defaultVariants: {
      size: "md",
    },
  }),
};
---

<div
  class={cva([
    "relative",
    "bg-cover",
    "bg-center",
    "rounded transition-all h-24 lg:h-20 hover:brightness-[95%]",
    `hover:scale-105 duration-50 ease-in`,
    post.covers.length > 0 ? "" : "bg-gray-600",
  ])()}
>
  <RandomCover covers={post.covers} changeFrequency={4_000}>
    <a href={path} class="relative">
      <h1
        class="text-center text-sm sm:text-lg text-white font-bold text-shadow-lg"
      >
        {post.title}
      </h1>
    </a>

    <div class="flex gap-1 absolute bottom-1 right-40">
      {tags.map((tag: string) => <Tag contents={toTitleCase(tag)} />)}
    </div>
  </RandomCover>
</div>
