---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import Header from "../../components/Header.astro";

const parseDate = (dateStr: string): Date => {
  if (/^\d{4}$/.test(dateStr)) {
    // Year only format (YYYY)
    return new Date(parseInt(dateStr), 0, 1);
  } else if (/^\d{2}-\d{2}-\d{2}$/.test(dateStr)) {
    // Short date format (YY-MM-DD)
    const [year, month, day] = dateStr.split("-").map(Number);
    return new Date(2000 + year, month - 1, day);
  }
  return new Date(0); // fallback for invalid dates
};

const posts = (await getCollection("blog")).sort(
  (a, b) => parseDate(a.data.date).getTime() - parseDate(b.data.date).getTime(),
);
---

<!doctype html>
<html lang="en">
    <head>
        <Header />
    </head>
    <body>
        <main class="w-full max-w-full m-0 p-4">
            <section class="w-full max-w-3xl mx-auto">
                <h1 class="text-center mb-8 text-4xl text-gray-800 dark:text-gray-200">All Posts</h1>
                <ul class="list-none p-0 m-0 grid gap-8 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2">
                    {
                        posts.map((post) => (
                            <li class="border border-gray-300 dark:border-gray-600 rounded-xl overflow-hidden transition-all duration-200 hover:-translate-y-0.5 hover:shadow-lg">
                                <a href={`/posts/${post.id}/`} class="block no-underline text-inherit h-full">
                                    {post.data.covers && post.data.covers.length > 0 && (
                                        <div class="w-full h-48 overflow-hidden">
                                            <Image
                                                width={400}
                                                height={200}
                                                src={post.data.covers[0]}
                                                alt={post.data.title}
                                                class="w-full h-full object-cover"
                                            />
                                        </div>
                                    )}
                                    <div class="p-6">
                                        <h2 class="m-0 mb-2 text-xl text-gray-800 dark:text-gray-200">{post.data.title}</h2>
                                        <p class="m-0 mb-4 text-gray-600 dark:text-gray-400 leading-relaxed">{post.data.description}</p>
                                        <div class="text-sm text-gray-600 dark:text-gray-400 flex items-center gap-4">
                                            <FormattedDate date={new Date(post.data.date)} />
                                            {post.data.tags && (
                                                <div class="flex flex-wrap gap-2">
                                                    {post.data.tags.map((tag) => (
                                                        <span class="bg-blue-500 text-white px-2 py-1 rounded text-xs">{tag}</span>
                                                    ))}
                                                </div>
                                            )}
                                        </div>
                                    </div>
                                </a>
                            </li>
                        ))
                    }
                </ul>
            </section>
        </main>
        <Footer />
    </body>
</html>
