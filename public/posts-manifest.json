[
  {
    "title": "Val Town CLI",
    "type": "project",
    "date": "2025",
    "covers": [
      "/media/37c9a2a8-3f0a-4b52-a9c7-cf7c0cc0799b.webp,430777215-b0211414-1fa5-4b7c-8612-b9459a2cb8f8.gif"
    ],
    "tags": ["hidden", "work"],
    "description": "A technical dive into the development of VT, Val Town's new command-line tool that enables local development for Val Town projects. Engineering considerations behind building VT, like its evolution from a FUSE-based approach to a more compatible Git-inspired CLI design. How VT handles synchronization between local and remote environments, file watching for live development, and the challenges of implementing features like rename detection.\n",
    "path": "posts/ValTownCLI"
  },
  {
    "title": "Tour of Nix",
    "type": "blog",
    "date": "2024",
    "covers": ["/media/52042908-6c60-4f88-9880-22b486c7242c_0001"],
    "tags": ["personal"],
    "description": "An introduction to Nix and its ecosystem. The basics of Nix as a language, its use as a package manager, build tool, and much more. Some brief discussion of core concepts like derivations and flakes, and a walkthrough of simple examples packaging programs. Learn how Nix can help create reproducible builds and consistent development environments, and do fun things like allow bash scripting with any binary, or making pure latex documents. Post is still in progress.\n",
    "path": "posts/WhirlwindTourOfNix"
  },
  {
    "title": "Veale Snyder Fellowship Reflection",
    "type": "blog",
    "date": "2024",
    "covers": [
      "/media/coverFountainVeale, VealeSnyderReflection-20241025150445254.webp, Pasted image 20241025041749.png, Pasted image 20241025035853.png"
    ],
    "tags": ["academic"],
    "description": "As part of CWRU's Veale Snyder entrepreneurial fellowship, I had the incredible opportunity to travel to San Francisco and meet with executives and engineers from various companies, including Fountain, NVIDIA, Rivian, Google, Y Combinator, and Giant. Throughout the trip, I gained valuable insights into entrepreneurship, company culture, and personal growth, which I will carry with me on my entrepreneurial journey. This eye-opening experience has not only expanded my network but also provided me with invaluable lessons that I look forward to applying to my future endeavors.\n",
    "path": "posts/VealeSnyderReflection"
  },
  {
    "title": "Today I Learned",
    "type": "blog",
    "date": "2024",
    "covers": ["/media/Post-20240713182452886.webp"],
    "tags": ["personal", "featured"],
    "description": "A collection of random disconnected things that I learn on given days.",
    "path": "posts/TodayIlearned"
  },
  {
    "title": "Recurse Checkins",
    "type": "blog",
    "date": "2024",
    "covers": ["/media/recurselogo_0001"],
    "tags": ["personal"],
    "description": "My occasional/semi-regular checkins that I wrote to account my time at Recurse Center. The point of checkins are to keep track of what I work on, who I work with, and the social events I go to. These are short but down to the point summaries of what I've done.\n",
    "path": "posts/RecurseCheckins"
  },
  {
    "title": "Predetermined Text Widths",
    "type": "blog",
    "date": "2024",
    "covers": ["/media/Screenshot_from_2024-03-24_01-44-59_0001"],
    "tags": ["personal"],
    "description": "A neat hack that I figured out to get the titles on my website to render in a very specific way. Many titles on my homepage fill in automatically with a typewriter animation. Instead of the titles rendering where their darker background grows wider as the typewriter types, which was the default since I was using fitting width, I found a hack to get the widths to be correct to the size that the text would end up being on the initial load.\n",
    "path": "posts/PredeterminedTextWidths"
  },
  {
    "title": "Obsidian Contact Importer",
    "type": "project",
    "date": "2024",
    "covers": ["/media/Post-20240806180300351.webp"],
    "tags": ["personal"],
    "description": "A project to bring phone contacts into Obsidian as markdown files, converting vCard (.vcf) files exported from phones or Google Contacts into nicely formatted notes. By storing contacts as markdown, users can take better notes about people they meet and maintain richer context around relationships, while keeping everything in their Obsidian vault. The tool uses customizable templates and handles contact details like names, phones, emails, addresses and even contact photos, making contact information easily searchable and editable within Obsidian's ecosystem.&#x20;\n",
    "path": "posts/ObsidianContactImporter"
  },
  {
    "title": "Literally Everything (in Python)",
    "type": "project",
    "date": "2024",
    "covers": ["/media/everythingcli_0001"],
    "tags": ["personal"],
    "description": "Using OpenAI's's API I've made it possible to literally import anything \"from everything\"! Any function you can imagine, dynamically generated at runtime, accessible with a simple import. When you import \\<anything> from everything, my project uses Python's AST to scan your source, and find all usages of \\<anything>. It then will merge a few lines of context on both sides of every function call, along with the call itself. Then, it will use OpenAI's gpt-4o model to generate a Python function, which you can then use in your code.\n",
    "path": "posts/LiterallyEverything"
  },
  {
    "title": "CWRU Linux Scripting Class Portfolio",
    "type": "blog",
    "date": "2024",
    "covers": [
      "/media/Screenshot_from_2024-04-14_23-29-12_0001",
      "/media/Screenshot_from_2024-04-14_23-29-31_0001",
      "/media/Pasted_image_20240414232043_0001",
      "/media/Linux-desktopentry_0001",
      "/media/Screenshot_from_2024-04-16_18-15-57_0001"
    ],
    "tags": ["academic"],
    "description": "This is my portfolio for Professor Ronald Loui's CSDS285 @ CWRU, a class that teaches various Linux tools and concepts, like bash, awk, regex, and bottom-up design. It's an eclectic mix of scripts and Linux-y things I've done with the stuff I've learned throughout the semester in the course. There are a few projects towards the beginning, and then I have a bunch of random bash scripts and more Linux-y things towards the bottom portion.\n",
    "path": "posts/LinuxClassPortfolio"
  },
  {
    "title": "Forced Browser-Based Zoom Extension",
    "type": "project",
    "date": "2024",
    "covers": [
      "/media/Post-20240716211735260.webp",
      "/media/Post-20240716212111111.webp",
      "/media/Post-20240716214604533.webp"
    ],
    "tags": ["personal"],
    "description": "This idea spawned from my hatred and eternal frustration with Zoom. It's just always a pain to deal with; screen share often just doesn't work right, the UI glitches out, audio is a mess and very inconsistent, and it eats up system resources and is probably doing mysterious things behind the scenes intruding on privacy. There's a solution though: use Zoom in your browser, only, always, ever! Zoom provides an option to join in the browser, given that you reject their popups to open in desktop, and then click through a chain of links to open in the browser. My solution: a browser extension to redirect Zoom links directly to browser Zoom.\n",
    "path": "posts/ForcedBrowserZoomExtension"
  },
  {
    "title": "Coin Date Sorting Robot",
    "type": "project",
    "date": "2024",
    "covers": [
      "/media/sideViewWithRamp_0001",
      "/media/frontView_0001",
      "/media/wiresOnTable_0001"
    ],
    "tags": ["academic", "featured"],
    "description": "Coin-sort-bot is a physical robot that I co-designed and wrote software for to automatically align and sort coins based on their physical features like year, date, and mint location. It is designed mostly with fusion360 for CAD and Python driver software, and is an IOT device that connects to a separate Django webserver. It is still in development, and currently has a basic 3d printed prototype and driver software to control the hardware.\n",
    "path": "posts/CoinSortBot"
  },
  {
    "title": "CWRU Free Food Finder",
    "type": "project",
    "date": "2024",
    "covers": [
      "/media/googleCalandar, mobileUi, eventTiles, cloudRunLogs, googleCalander"
    ],
    "tags": ["featured", "academic"],
    "description": "For Case Western's 2024 hackathon two friends and I built a webapp for locating free food on our campus. We used a fine tuned OpenAI model to read all events from our university's event management system and determined whether they had food, of what type, and to generate other metadata. We then displayed this data on a appealing MUI-React UI, and set up a deployment at free-cwru-food.404wolf.com! We added various additional features like a calendar integration, and have continued to improve the site.\n",
    "path": "posts/CWRUFreeFoodFinder"
  },
  {
    "title": "Android in the Browser",
    "type": "project",
    "date": "2024",
    "covers": ["/media/Post-20240807144914137.webp"],
    "tags": ["personal"],
    "description": "An ongoing effort to get a fully functional android phone embedded into an iFrame in a browser, with as little latency as possible. Note: post in progress!\n",
    "path": "posts/AndroidInTheBrowser"
  },
  {
    "title": "404Wolf.com",
    "type": "project",
    "date": "2024",
    "covers": ["/media/homepage_0001"],
    "tags": ["featured", "academic"],
    "description": "How I made my website, and an overview of all its unique features, including an integrated what-you-see-is-what-you-get markdown viewer, and fully featured Obsidian plugin. I explain my stack choice, how the posts are managed, and present my custom in-site editor. I also talk briefly about some specific struggles when building the website, like creating a good backup protocol and getting my markdown to parse properly and in a very specific way.\n",
    "path": "posts/404Wolf.com"
  },
  {
    "title": "SVG Shenanigans",
    "type": "blog",
    "date": "2023",
    "covers": ["/media/diamond"],
    "tags": ["personal"],
    "description": "In my quest to automate SVG file generation, I discovered Chrome's ability to convert complex SVGs with imports into self-contained PDFs through its printing protocol. My aim was to write a script to easily convert Chrome-preview-able files into PDFs. With Selenium and Chrome's Devtools Protocol, I was able to figure out how to perform the conversion, but wasn't satisfied. In this post, I discuss my script to convert complex files like SVGs to PDFs without any file handling, from memory to memory, headless-ly to allow for a smooth and efficient conversion process.\n",
    "path": "posts/SVGShenanigans"
  },
  {
    "title": "Remarkable Backup Utility",
    "type": "project",
    "date": "2023",
    "covers": ["/media/remarkableExample_0001"],
    "tags": ["personal"],
    "description": "A remarkable tablet is a digital paper replacement: an e-ink screen tablet with a stylus. To prevent dependency on the proprietary tools of Remarkable, I decided to develop a simple script to automatically recreate the directory structure of the tablet, including both the original .rm proprietary binary file format files, and rendered PDF files.\n",
    "path": "posts/RemarkableBackupUtility"
  },
  {
    "title": "Markdown Image Blocks",
    "type": "blog",
    "date": "2023",
    "covers": ["/media/carouselExample_0001"],
    "tags": ["personal", "featured"],
    "description": "I talk about how I got my markdown to include image groups with many images side-by-side, automatically. I’ve scoured my way through eclectic convoluted docs, pained past unsensical bugs, and have finally begun to wrap my head around the world of JS markdown parsing. With a general overview and some useful snippets, you’ll too learn how to customize markdown rendering for your own purposes.\n",
    "path": "posts/MarkdownImageBlocks"
  },
  {
    "title": "Eclectic English Vocab",
    "type": "project",
    "date": "2023",
    "covers": [
      "/media/mobile_flashcards",
      "/media/desktop_flashcard_front",
      "/media/word_cubes"
    ],
    "tags": ["personal", "ongoing"],
    "description": "Conglomeration, obstreperous, mercurial, preantepenultimate, rapacious, verisimilitude. For some, it's coins—for me, words. Over the past year, I've fastidiously curated those with intriguing meanings, idyllic spellings, eccentric pronunciations, and compelling origins, bolstering my lexicon and piquing my logophilia. It's been an engrossing use of free-time tranches, and a process as delightful as the product.\n",
    "path": "posts/EclecticEnglishVocabDeck"
  },
  {
    "title": "Ember Sniper",
    "type": "project",
    "date": "2022",
    "covers": ["/media/the_queue"],
    "tags": ["personal", "featured"],
    "description": "For many, it's a sandbox for creativity, and a haven for ingenuity. And yeah, it is that. But for me a few years back, it was much much more: it was a lucrative business opportunity. At the time, I had first entered the realm of Minecraft-username-trading. A corner of the internet dedicated to buying/selling accounts with cool names for exorbitant prices. But what caught my eye was a niche of the niche: username-sniping—using bots to 'snipe' accounts with cool (and valuable) usernames right as they become available. Though it sounded simple, it turned out to be an intense, competitive game of tactic.\n",
    "path": "posts/MinecraftUsernameAutoclaiming"
  },
  {
    "title": "MSN Emails",
    "type": "blog",
    "date": "2022",
    "covers": [
      "/media/caffeinate_creation",
      "/media/covid_msn",
      "/media/make_email"
    ],
    "tags": ["personal"],
    "description": "A few years ago I discovered a Microsoft account creation captcha bypass exploit that allowed you to create @msn.com email accounts through an old piece of microsoft software called MSN explorer. I submitted a vulnerability report and got it approved, and a captcha added to the endpoint. I talk about how the process works, how I was able to figure it out, and, at the end, I provide an explanation of how it's still possible (in 2023+!) to create a Microsoft account with the domain via a straightforward step-by-step walk through.\n",
    "path": "posts/MSNEmails"
  },
  {
    "title": "DNA Nanotube Design Software",
    "type": "project",
    "date": "2022",
    "covers": ["/media/example_nanotube", "/media/first_top_view"],
    "tags": ["academic", "featured"],
    "description": "NATuG (Nucleic Acid Tube Grapher) was an academic research project I undertook in my senior year that's a Python3-based desktop application designed to streamline the DNA nanotube design process. It's one of my most extensive projects, involving a complex and dynamic UI that lets users visualize DNA nanotube shapes, weave together strands of DNA with cross-strand exchanges, set and export sequences, and more. Here I discuss what the program does, a bit about how it works, and how I got involved.\n",
    "path": "posts/DNANanotubeSoftware"
  },
  {
    "title": "Bitwarden Backup Utility",
    "type": "project",
    "date": "2021",
    "covers": ["/media/bitwarden_backup"],
    "tags": ["personal", "hidden"],
    "description": "Bitwarden, a popular open source and free password manager, does a great job of securely storing passwords and other personal data in their cloud, well-encrypted and accessible. However, their option to export your vault (to maintain a local/physical backup) is to export it as a .json file, leaving data in a very human-unfriendly format. So, I made a program that converts the json to a more human readable html file, which one can print onto physical paper. In addition, I've integrated automatic favicon/icon fetching, QR code generation, databreach checks and more.\n",
    "path": "posts/BitwardenBackupTool"
  },
  {
    "title": "Closet Hydroponics",
    "type": "project",
    "date": "2020",
    "covers": [
      "/media/a_harvest",
      "/media/baby_pepper",
      "/media/early_growth",
      "/media/grow_baskets",
      "/media/hydroGreen",
      "/media/outside_closet_view_of_peppers",
      "/media/peppers_side_view_lights_on",
      "/media/roots",
      "/media/strawberries"
    ],
    "tags": ["personal", "ongoing"],
    "description": "With the goal of learning how to code some basic Arduino, I fell down the deep rabbit hole of automated gardening. After setting up a simple strawberry watering apparatus in my closet, I began upscaling, up until some mold related challenges prompted a shift to basil hydroponics. Weekly pesto became the norm, and it was smooth sailing until the perennial crop passed its prime. And after such great success with basil, I've now stumbled upon the less successful crop of Shishito Peppers. Here I discuss the research process and many of the pitfalls of my journey, along with many of the things I learned along the way and tips for other aspiring closet gardeners.\n",
    "path": "posts/Hydroponics"
  }
]
